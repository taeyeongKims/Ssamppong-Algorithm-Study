#include <iostream>
#include <array>
#include <algorithm>
#include <vector>
using namespace std;

int N;
int L;

struct Pool
{
	Pool(int a, int b):Start(a), End(b) {}
	int Start;
	int End;
};

vector<Pool> v;

int main()
{
	cin >> N >> L;

	for (int i = 0; i < N; i++)
	{
		int start, end;
		cin >> start >> end;
		v.emplace_back(start, end);
	}

	std::sort(v.begin(), v.end(), 
		[](const Pool& left, const Pool& right) 
		{
			return left.Start < right.Start; 
		}
	);

	int cnt = 0;
	int dist = 0;

	for (const auto& pool : v)
	{
		while (dist < pool.End)
		{
			if (dist < pool.Start)
			{
				dist = pool.Start + L;
			}
			else
			{
				dist = dist + L;
			}
			++cnt;
		}
	}

	cout << cnt;
}
